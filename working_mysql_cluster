
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl get nodes
NAME                    STATUS   ROLES    AGE   VERSION
microk8-vag-01-node-0   Ready    <none>   44m   v1.26.0
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl get pods
No resources found in default namespace.
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl apply -f https://raw.githubusercontent.com/mysql/mysql-operator/trunk/deploy/deploy-crds.yaml
                                 # Next deploy MySQL Operator for Kubernetes, which also includes RBAC definitions as noted in the output: 
                                 microk8s kubectl apply -f https://raw.githubusercontent.com/mysql/mysql-operator/trunk/deploy/deploy-operator.yaml

                                 # Verify that the operator is running by checking the deployment that's managing the operator inside the mysql-operator namespace, a configurable namespace defined by deploy-operator.yaml: 
                                 microk8s kubectl get deployment mysql-operator --namespace mysql-operator
customresourcedefinition.apiextensions.k8s.io/innodbclusters.mysql.oracle.com created
customresourcedefinition.apiextensions.k8s.io/mysqlbackups.mysql.oracle.com created
customresourcedefinition.apiextensions.k8s.io/clusterkopfpeerings.zalando.org created
customresourcedefinition.apiextensions.k8s.io/kopfpeerings.zalando.org created
clusterrole.rbac.authorization.k8s.io/mysql-operator created
clusterrole.rbac.authorization.k8s.io/mysql-sidecar created
clusterrolebinding.rbac.authorization.k8s.io/mysql-operator-rolebinding created
clusterkopfpeering.zalando.org/mysql-operator created
namespace/mysql-operator created
serviceaccount/mysql-operator-sa created
deployment.apps/mysql-operator created
NAME             READY   UP-TO-DATE   AVAILABLE   AGE
mysql-operator   0/1     1            0           1s
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl get deployment mysql-operator --namespace mysql-operator
NAME             READY   UP-TO-DATE   AVAILABLE   AGE
mysql-operator   0/1     1            0           28s
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl get deployment mysql-operator --namespace mysql-operator --watch
NAME             READY   UP-TO-DATE   AVAILABLE   AGE
mysql-operator   0/1     1            0           57s
mysql-operator   1/1     1            1           79s
^C⏎                                                                                                                                                                                         
vagrant@microk8-vag-01-node-0 ~ [1]> microk8s kubectl create secret generic mypwds \
                                                 --from-literal=rootUser=root \
                                                 --from-literal=rootHost=% \
                                                 --from-literal=rootPassword="sakila"
secret/mypwds created
vagrant@microk8-vag-01-node-0 ~> touch mycluster.yaml
vagrant@microk8-vag-01-node-0 ~> nano mycluster.yaml 
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl apply -f mycluster.yaml
innodbcluster.mysql.oracle.com/mycluster created
vagrant@microk8-vag-01-node-0 ~> microk8s ubectl get innodbcluster --watch
'ubectl' is not a valid MicroK8s subcommand.
Available subcommands are:
        add-node
        addons
        cilium
        config
        ctr
        dashboard-proxy
        dbctl
        disable
        enable
        helm
        helm3
        images
        istioctl
        join
        kubectl
        leave
        linkerd
        refresh-certs
        remove-node
        reset
        start
        status
        stop
        version
        inspect
vagrant@microk8-vag-01-node-0 ~ [1]> microk8s kubectl get innodbcluster --watch
NAME        STATUS    ONLINE   INSTANCES   ROUTERS   AGE
mycluster   PENDING   0        3           1         58s
⏎                                                                                                                                                                            
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl get innodbcluster
NAME        STATUS    ONLINE   INSTANCES   ROUTERS   AGE
mycluster   PENDING   0        3           1         161m
vagrant@microk8-vag-01-node-0 ~> microk8s.status --wait-ready
microk8s is running
high-availability: no
  datastore master nodes: 127.0.0.1:19001
  datastore standby nodes: none
addons:
  enabled:
    dns                  # (core) CoreDNS
    ha-cluster           # (core) Configure high availability on the current node
    helm                 # (core) Helm - the package manager for Kubernetes
    helm3                # (core) Helm 3 - the package manager for Kubernetes
  disabled:
    cert-manager         # (core) Cloud native certificate management
    community            # (core) The community addons repository
    dashboard            # (core) The Kubernetes dashboard
    gpu                  # (core) Automatic enablement of Nvidia CUDA
    host-access          # (core) Allow Pods connecting to Host services smoothly
    hostpath-storage     # (core) Storage class; allocates storage from host directory
    ingress              # (core) Ingress controller for external access
    kube-ovn             # (core) An advanced network fabric for Kubernetes
    mayastor             # (core) OpenEBS MayaStor
    metallb              # (core) Loadbalancer for your Kubernetes cluster
    metrics-server       # (core) K8s Metrics Server for API access to service metrics
    minio                # (core) MinIO object storage
    observability        # (core) A lightweight observability stack for logs, traces and metrics
    prometheus           # (core) Prometheus operator for monitoring and logging
    rbac                 # (core) Role-Based Access Control for authorisation
    registry             # (core) Private image registry exposed on localhost:32000
    storage              # (core) Alias to hostpath-storage add-on, deprecated
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl delete innodbcluster mycluster
innodbcluster.mysql.oracle.com "mycluster" deleted
vagrant@microk8-vag-01-node-0 ~> microk8s add-node
From the node you wish to join to this cluster, run the following:
microk8s join 10.0.2.15:25000/50a7e68be5096f53dc949358ea2f92c8/eb07c7994e9b

Use the '--worker' flag to join a node as a worker not running the control plane, eg:
microk8s join 10.0.2.15:25000/50a7e68be5096f53dc949358ea2f92c8/eb07c7994e9b --worker

If the node you are adding is not reachable through the default interface you can use one of the following:
microk8s join 10.0.2.15:25000/50a7e68be5096f53dc949358ea2f92c8/eb07c7994e9b
microk8s join 192.168.1.7:25000/50a7e68be5096f53dc949358ea2f92c8/eb07c7994e9b
microk8s join 192.168.1.10:25000/50a7e68be5096f53dc949358ea2f92c8/eb07c7994e9b
microk8s join 172.17.0.1:25000/50a7e68be5096f53dc949358ea2f92c8/eb07c7994e9b
vagrant@microk8-vag-01-node-0 ~> microk8s add-node
From the node you wish to join to this cluster, run the following:
microk8s join 10.0.2.15:25000/814565b7c64b9a30786253b9bb5a92cb/eb07c7994e9b

Use the '--worker' flag to join a node as a worker not running the control plane, eg:
microk8s join 10.0.2.15:25000/814565b7c64b9a30786253b9bb5a92cb/eb07c7994e9b --worker

If the node you are adding is not reachable through the default interface you can use one of the following:
microk8s join 10.0.2.15:25000/814565b7c64b9a30786253b9bb5a92cb/eb07c7994e9b
microk8s join 192.168.1.7:25000/814565b7c64b9a30786253b9bb5a92cb/eb07c7994e9b
microk8s join 192.168.1.10:25000/814565b7c64b9a30786253b9bb5a92cb/eb07c7994e9b
microk8s join 172.17.0.1:25000/814565b7c64b9a30786253b9bb5a92cb/eb07c7994e9b
vagrant@microk8-vag-01-node-0 ~> microk8s.status --wait-ready
microk8s is running
high-availability: yes
  datastore master nodes: 192.168.1.10:19001 192.168.1.11:19001 192.168.1.12:19001
  datastore standby nodes: none
addons:
  enabled:
    dns                  # (core) CoreDNS
    ha-cluster           # (core) Configure high availability on the current node
    helm                 # (core) Helm - the package manager for Kubernetes
    helm3                # (core) Helm 3 - the package manager for Kubernetes
  disabled:
    cert-manager         # (core) Cloud native certificate management
    community            # (core) The community addons repository
    dashboard            # (core) The Kubernetes dashboard
    gpu                  # (core) Automatic enablement of Nvidia CUDA
    host-access          # (core) Allow Pods connecting to Host services smoothly
    hostpath-storage     # (core) Storage class; allocates storage from host directory
    ingress              # (core) Ingress controller for external access
    kube-ovn             # (core) An advanced network fabric for Kubernetes
    mayastor             # (core) OpenEBS MayaStor
    metallb              # (core) Loadbalancer for your Kubernetes cluster
    metrics-server       # (core) K8s Metrics Server for API access to service metrics
    minio                # (core) MinIO object storage
    observability        # (core) A lightweight observability stack for logs, traces and metrics
    prometheus           # (core) Prometheus operator for monitoring and logging
    rbac                 # (core) Role-Based Access Control for authorisation
    registry             # (core) Private image registry exposed on localhost:32000
    storage              # (core) Alias to hostpath-storage add-on, deprecated
vagrant@microk8-vag-01-node-0 ~> microk8s.enable rbac
Infer repository core for addon rbac
Enabling RBAC
Reconfiguring apiserver
Adding argument --authorization-mode to nodes.
Restarting nodes.
RBAC is enabled
vagrant@microk8-vag-01-node-0 ~> microk8s enable dns
Infer repository core for addon dns
Addon core/dns is already enabled
vagrant@microk8-vag-01-node-0 ~> microk8s enable hostpath-storage
Infer repository core for addon hostpath-storage
Enabling default storage class.
WARNING: Hostpath storage is not suitable for production environments.

deployment.apps/hostpath-provisioner created
storageclass.storage.k8s.io/microk8s-hostpath created
serviceaccount/microk8s-hostpath created
clusterrole.rbac.authorization.k8s.io/microk8s-hostpath created
clusterrolebinding.rbac.authorization.k8s.io/microk8s-hostpath created
Storage will be available soon.
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl apply -f mycluster.yaml
innodbcluster.mysql.oracle.com/mycluster created
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl get innodbcluster --watch
NAME        STATUS    ONLINE   INSTANCES   ROUTERS   AGE
mycluster   PENDING   0        3           1         21s
^C⏎                                                                                                                                                                          
vagrant@microk8-vag-01-node-0 ~ [1]> microk8s kubectl get innodbcluster
NAME        STATUS    ONLINE   INSTANCES   ROUTERS   AGE
mycluster   PENDING   0        3           1         3m45s
vagrant@microk8-vag-01-node-0 ~> microk8s.status --wait-ready
microk8s is running
high-availability: yes
  datastore master nodes: 192.168.1.10:19001 192.168.1.11:19001 192.168.1.12:19001
  datastore standby nodes: none
addons:
  enabled:
    dns                  # (core) CoreDNS
    ha-cluster           # (core) Configure high availability on the current node
    helm                 # (core) Helm - the package manager for Kubernetes
    helm3                # (core) Helm 3 - the package manager for Kubernetes
    hostpath-storage     # (core) Storage class; allocates storage from host directory
    rbac                 # (core) Role-Based Access Control for authorisation
    storage              # (core) Alias to hostpath-storage add-on, deprecated
  disabled:
    cert-manager         # (core) Cloud native certificate management
    community            # (core) The community addons repository
    dashboard            # (core) The Kubernetes dashboard
    gpu                  # (core) Automatic enablement of Nvidia CUDA
    host-access          # (core) Allow Pods connecting to Host services smoothly
    ingress              # (core) Ingress controller for external access
    kube-ovn             # (core) An advanced network fabric for Kubernetes
    mayastor             # (core) OpenEBS MayaStor
    metallb              # (core) Loadbalancer for your Kubernetes cluster
    metrics-server       # (core) K8s Metrics Server for API access to service metrics
    minio                # (core) MinIO object storage
    observability        # (core) A lightweight observability stack for logs, traces and metrics
    prometheus           # (core) Prometheus operator for monitoring and logging
    registry             # (core) Private image registry exposed on localhost:32000
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl get pods
NAME          READY   STATUS     RESTARTS   AGE
mycluster-0   0/2     Init:2/3   0          5m56s
mycluster-1   0/2     Init:2/3   0          5m56s
mycluster-2   2/2     Running    0          5m56s
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl get pods
NAME          READY   STATUS            RESTARTS   AGE
mycluster-2   2/2     Running           0          6m49s
mycluster-0   2/2     Running           0          6m49s
mycluster-1   0/2     PodInitializing   0          6m49s
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl get pods
NAME                                READY   STATUS              RESTARTS   AGE
mycluster-0                         2/2     Running             0          7m39s
mycluster-2                         2/2     Running             0          7m39s
mycluster-router-578758658b-n7m7q   0/1     ContainerCreating   0          17s
mycluster-1                         2/2     Running             0          7m39s
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl get pods
NAME                                READY   STATUS    RESTARTS   AGE
mycluster-0                         2/2     Running   0          8m18s
mycluster-2                         2/2     Running   0          8m18s
mycluster-1                         2/2     Running   0          8m18s
mycluster-router-578758658b-n7m7q   1/1     Running   0          56s
vagrant@microk8-vag-01-node-0 ~> microk8s kubectl get innodbcluster
NAME        STATUS   ONLINE   INSTANCES   ROUTERS   AGE
mycluster   ONLINE   3        3           1         8m31s
vagrant@microk8-vag-01-node-0 ~> 